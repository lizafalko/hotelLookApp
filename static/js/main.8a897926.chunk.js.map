{"version":3,"sources":["fonts/Roboto.ttf","fonts/Robotobold.ttf","Label.js","Phone.js","Form.js","Banner.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Label","react_default","a","createElement","className","Phone","props","phoneText","Form","courseDate","coursePlaces","type","name","placeholder","value","checked","dist_default","style","color","rel","target","href","Banner","src_Label","fullPurchase","installmentPurchase","beginnersPurchase","beginnersNumber","src_Phone","src_Form","About","App","src_About","src_Banner","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qICYzBC,MAVR,WACL,OACEC,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,wCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,OACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,6CCMSC,MAXR,SAAeC,GACpB,OACEL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeE,EAAMC,WACnCN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeE,EAAMC,WACnCN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeE,EAAMC,WACnCN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeE,EAAMC,6BCiB1BC,MAtBR,SAAcF,GACnB,OACEL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAAhB,kEAA0DH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAA8BE,EAAMG,aAC9GR,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAAhB,qDAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BAA8BE,EAAMI,gBAE7GT,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gCAAgCO,KAAK,OAAOC,KAAK,OAAOC,YAAY,uBACrFZ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gCAAgCO,KAAK,OAAOC,KAAK,UAAUC,YAAY,+CACxFZ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gCAAgCO,KAAK,OAAOC,KAAK,OAAOC,YAAY,UACrFZ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iCAAiCO,KAAK,SAASG,MAAM,iEACtEb,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAcQ,KAAK,WAAWD,KAAK,WAAWI,QAAQ,YACvEd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACdH,EAAAC,EAAAC,cAACa,EAAAd,EAAD,qLAA0CD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaa,MAAO,CAACC,MAAO,WAAYC,IAAI,sBAAsBC,OAAO,SAASC,KAAK,0CAApG,sHCcrCC,MA3BR,SAAgBhB,GACrB,OACEL,EAAAC,EAAAC,cAAA,WAASC,UAAU,UACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACbH,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,+HACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0CAA0CE,EAAMkB,aAA7D,YAEFvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBE,EAAMmB,oBAAvC,UACAxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,8JAEFH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAyCE,EAAMoB,kBAA5D,WACAzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2CAAb,2DAAmEE,EAAMqB,gBAAzE,mBAGJ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,sGACAH,EAAAC,EAAAC,cAACyB,EAAD,CAAOrB,UAAU,+CACjBN,EAAAC,EAAAC,cAAC0B,EAAD,CAAMpB,WAAW,qDAAaC,aAAa,mCChBpCoB,MARR,WACL,OACE7B,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,6GCQS2B,MATf,WACE,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC6B,EAAD,MACA/B,EAAAC,EAAAC,cAAC8B,EAAD,CAAQT,aAAa,SAASC,oBAAoB,QAAQC,kBAAkB,SAASC,gBAAgB,SCIvFO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACPvC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuC,WAAP,KACExC,EAAAC,EAAAC,cAACuC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME","file":"static/js/main.8a897926.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto.c613ca81.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Robotobold.1fc6a83d.ttf\";","import React from 'react';\n\nexport function Label() {\n  return (\n    <section className=\"label\">\n      <p className=\"label__pretext\">Скидка</p>\n      <p className=\"label__discount\">40%</p>\n      <p className=\"label__text\">первым 20</p>\n    </section>\n  );\n}\n\nexport default Label;\n","import React from 'react';\n\nexport function Phone(props) {\n  return (\n    <ul className=\"phone\">\n      <li className=\"phone__item\">{props.phoneText}</li>\n      <li className=\"phone__item\">{props.phoneText}</li>\n      <li className=\"phone__item\">{props.phoneText}</li>\n      <li className=\"phone__item\">{props.phoneText}</li>\n    </ul>\n  );\n}\n\nexport default Phone;\n","import React from 'react';\nimport Linkify from 'react-linkify';\n\nexport function Form(props) {\n  return (\n    <form className=\"form\">\n      <div className=\"form__info\">\n        <span className=\"form__text form__text_grey\">Старт курса: <span className=\"form__text form__text_blue\">{props.courseDate}</span></span>\n        <span className=\"form__text form__text_grey\">Осталось: <span className=\"form__text form__text_blue\">{props.coursePlaces}</span></span>\n      </div>\n      <input className=\"form__field form__field_input\" type=\"text\" name=\"name\" placeholder=\"Имя\" />\n      <input className=\"form__field form__field_input\" type=\"text\" name=\"surname\" placeholder=\"Телефон\" />\n      <input className=\"form__field form__field_input\" type=\"text\" name=\"mail\" placeholder=\"Email\" />\n      <input className=\"form__field form__field_button\" type=\"submit\" value=\"Записаться\" />\n      <label>\n        <input className=\"form__check\" name=\"checkbox\" type=\"checkbox\" checked=\"checked\" />\n        <span className=\"form__checkmark\"></span>\n        <span className=\"form__checkbox\">\n          <Linkify>Я согласен с условиями обработки <a className=\"form__link\" style={{color: '#3D3BFF'}} rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://skillbox.ru/privacy_policy.pdf\">персональных данных</a></Linkify>\n        </span>\n      </label>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport Label from './Label';\nimport Phone from './Phone';\nimport Form from './Form';\n\nexport function Banner(props) {\n  return (\n    <section className=\"banner\">\n      <div className=\"banner__container banner__container_purchase\">\n        <Label />\n        <div className=\"banner__purchase\">\n          <p className=\"banner__pretext banner__pretext_small\">Полная стоимость курса:</p>\n          <p className=\"banner__pretext banner__pretext_medium\">{props.fullPurchase} ₽</p>\n        </div>\n        <div>\n          <h2 className=\"banner__heading\">{props.installmentPurchase}₽</h2>\n          <p className=\"banner__text\">Рассрочка без первого взноса</p>\n        </div>\n        <div>\n          <p className=\"banner__pretext banner__pretext_large\">{props.beginnersPurchase} ₽</p>\n          <p className=\"banner__pretext banner__pretext_average\">Для первых {props.beginnersNumber}-ти</p>\n        </div>\n      </div>\n      <div className=\"banner__container banner__container_info\">\n        <h2 className=\"banner__subtitle\">Запишитесь на курс</h2>\n        <Phone phoneText=\"Телефон\" />\n        <Form courseDate=\"7 сентября\" coursePlaces=\"19 мест\"/>\n      </div>\n    </section>\n  );\n}\n\nexport default Banner;\n","import React from 'react';\n\nexport function About() {\n  return (\n    <section className=\"about\">\n      <h1 className=\"about__heading\">Стоимость обучения</h1>\n    </section>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport Banner from './Banner';\nimport About from './About';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <About />\n      <Banner fullPurchase=\"50 000\" installmentPurchase=\"2 900\" beginnersPurchase=\"29 000\" beginnersNumber=\"20\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './fonts/Roboto.ttf'\nimport './fonts/Robotobold.ttf'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}